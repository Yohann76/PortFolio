version: 2
jobs:
  build_and_test:
    docker:
      # Specify the version you desire here
      - image: circleci/php:7.3-node-browsers
      - image: circleci/mysql:5.7-ram

        environment:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_ROOT_PASSWORD: root
    steps:
      - checkout

      - run:
          name: Install System Packages
          command: sudo apt update && sudo apt -y install git unzip libxml2 libjpeg-dev libfreetype6-dev libjpeg62-turbo-dev libpng-dev libxslt-dev libzip-dev zlib1g-dev libsqlite3-dev libwebp-dev wget
          # PHP CircleCI 2.0 Configuration File sudo apt install zlib1g-dev libsqlite3-dev
      - run:
          name: Install PHP Extensions
          command: sudo docker-php-ext-install pdo pdo_mysql xsl zip
      #- run:
          #name: Configure gd
          #command: sudo docker-php-ext-configure gd --with-freetype-dir=/usr --with-jpeg-dir=/usr --with-png-dir=/usr
          ##command: sudo docker-php-ext-configure gd --with-freetype --with-jpeg
      #- run:
          #name: Install PHP gd
          #command: sudo -E docker-php-ext-install -j$(nproc) gd

      # Download and cache dependencies
      - restore_cache:
          keys:
            # "composer.lock" can be used if it is committed to the repo
            - portfolio-v1-dependencies-{{ checksum "composer.json" }}
            # fallback to using the latest cache if no exact match is found
            - portfolio-v1-dependencies-

      - run: composer install -n --prefer-dist

      - save_cache:
          key: portfolio-v1-dependencies-{{ checksum "composer.json" }}
          paths:
            - ./vendor

      #- run: chmod -x 777 bin/console
      # run: bin/console cache:clear --env=test
      #- run: bin/console cache:warmup --env=test

      - restore_cache:
          keys:
            - portfolio-node-v1-{{ checksum "package.json" }}
            - portfolio-node-v1-

      - run: yarn install
      - save_cache:
          key: portfolio-node-v1-{{ checksum "package.json" }}
          paths:
            - node_modules

      - run: yarn build

      # Database
      #- run: ./bin/console doctrine:database:create --env=test
      #- run: ./bin/console doctrine:schema:create --env=test
      #- run: ./bin/console doctrine:fixtures:load --env=test --no-interaction

      # Launch tests
      - run: chmod +x bin/phpunit
      - run: bin/phpunit

  configure_and_deploy:
  
      # Configure and deploy server
      - run: echo $ANSIBLE_VAULT_PASS > ansible/.vault-pass.txt
      - run: ansible-playbook ansible/playbook.yaml -i ansible/hosts.ini -e "git_branch=${CIRCLE_BRANCH}" --vault-password-file=ansible/.vault-pass.txt
      - run: rm ansible/.vault-pass.txt

workflows:
  version: 2
  build_test_configure_and_deploy:
    jobs:
      - build_and_test:
          filters:
            branches:
              only: master
      - configure_and_deploy:
          requires:
            - build_and_test
          filters:
            branches:
              only: master